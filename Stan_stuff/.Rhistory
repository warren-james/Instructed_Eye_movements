x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
rm(list = ls())
Participants <- as.factor(seq(1:10))
Distances <- seq(1:10)
trials = seq(1,24,1)
# setup dataframe
dat_part1 <- tibble(Participant = character(),
Distances = numeric(),
Accuracy = numeric())
# simulate participants
for(p in unique(Participants)){
for(d in unique(Distances)){
if(d <= 5){
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.05))
} else if(d > 5) {
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
}
a <- rbinom(trials, 1, x)
a <- sum(a)/max(trials)
dat_part1 <- rbind(dat_part1, data.frame(Participant = p,
Distances = d,
Accuracy = a))
}
}
# tidy
rm(a,d,p,Distances,Participants,trials)
# get glm of this data just to see what it looks like
m = glm(data=dat_part1, Accuracy~Distances:Participant,
family= binomial)
dat_part1$p <- predict(m, type = "response")
# plot this to check
plt <- ggplot(dat_part1, aes(Distances, Accuracy))
plt <- plt + geom_point()
plt <- plt + geom_smooth(method=glm,
method.args = list(family = "binomial"),
aes(y=p),
fullrange=T, se=F)
plt <- plt + facet_wrap(~Participant)
plt
d = 10
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
d = 3
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
Participants <- as.factor(seq(1:10))
Distances <- seq(1:10)
trials = seq(1,24,1)
# setup dataframe
dat_part1 <- tibble(Participant = character(),
Distances = numeric(),
Accuracy = numeric())
# simulate participants
for(p in unique(Participants)){
for(d in unique(Distances)){
if(d <= 5){
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
} else if(d > 5) {
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.05, x+0.02))
}
a <- rbinom(trials, 1, x)
a <- sum(a)/max(trials)
dat_part1 <- rbind(dat_part1, data.frame(Participant = p,
Distances = d,
Accuracy = a))
}
}
# tidy
rm(a,d,p,Distances,Participants,trials)
# get glm of this data just to see what it looks like
m = glm(data=dat_part1, Accuracy~Distances:Participant,
family= binomial)
dat_part1$p <- predict(m, type = "response")
# plot this to check
plt <- ggplot(dat_part1, aes(Distances, Accuracy))
plt <- plt + geom_point()
plt <- plt + geom_smooth(method=glm,
method.args = list(family = "binomial"),
aes(y=p),
fullrange=T, se=F)
plt <- plt + facet_wrap(~Participant)
plt
d = 1
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
d = 0.8
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
d = 0.7
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
d = 6
d = 6
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
d = 2
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x-0.02, x+0.07))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
Participants <- as.factor(seq(1:10))
Distances <- seq(1:10)
trials = seq(1,24,1)
# setup dataframe
dat_part1 <- tibble(Participant = character(),
Distances = numeric(),
Accuracy = numeric())
# simulate participants
for(p in unique(Participants)){
for(d in unique(Distances)){
if(d <= 5){
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
} else if(d > 5) {
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.1, x))
}
a <- rbinom(trials, 1, x)
a <- sum(a)/max(trials)
dat_part1 <- rbind(dat_part1, data.frame(Participant = p,
Distances = d,
Accuracy = a))
}
}
# tidy
rm(a,d,p,x,Distances,Participants,trials)
# get glm of this data just to see what it looks like
m = glm(data=dat_part1, Accuracy~Distances:Participant,
family= binomial)
dat_part1$p <- predict(m, type = "response")
# plot this to check
plt <- ggplot(dat_part1, aes(Distances, Accuracy))
plt <- plt + geom_point()
plt <- plt + geom_smooth(method=glm,
method.args = list(family = "binomial"),
aes(y=p),
fullrange=T, se=F)
plt <- plt + facet_wrap(~Participant)
plt
Participants <- as.factor(seq(1:10))
Distances <- seq(1:10)
trials = seq(1,24,1)
# setup dataframe
dat_part1 <- tibble(Participant = character(),
Distances = numeric(),
Accuracy = numeric())
# simulate participants
for(p in unique(Participants)){
for(d in unique(Distances)){
if(d <= 5){
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
} else if(d > 5) {
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.1, x))
}
a <- rbinom(trials, 1, x)
a <- sum(a)/max(trials)
dat_part1 <- rbind(dat_part1, data.frame(Participant = p,
Distances = d,
Accuracy = a))
}
}
# tidy
rm(a,d,p,x,Distances,Participants,trials)
# get glm of this data just to see what it looks like
m = glm(data=dat_part1, Accuracy~Distances:Participant,
family= binomial)
dat_part1$p <- predict(m, type = "response")
# plot this to check
plt <- ggplot(dat_part1, aes(Distances, Accuracy))
plt <- plt + geom_point()
plt <- plt + geom_smooth(method=glm,
method.args = list(family = "binomial"),
aes(y=p),
fullrange=T, se=F)
plt <- plt + facet_wrap(~Participant)
plt
Participants <- as.factor(seq(1:10))
Distances <- seq(1:10)
trials = seq(1,24,1)
# setup dataframe
dat_part1 <- tibble(Participant = character(),
Distances = numeric(),
Accuracy = numeric())
# simulate participants
for(p in unique(Participants)){
for(d in unique(Distances)){
if(d <= 5){
x <- 1-(0.1*d)
x <- abs(runif(1,x, x+0.1))
} else if(d > 5) {
x <- 1-(0.1*d)
x <- abs(runif(1, x-0.1, x))
}
a <- rbinom(trials, 1, x)
a <- sum(a)/max(trials)
dat_part1 <- rbind(dat_part1, data.frame(Participant = p,
Distances = d,
Accuracy = a))
}
}
# tidy
rm(a,d,p,x,Distances,Participants,trials)
# get glm of this data just to see what it looks like
m = glm(data=dat_part1, Accuracy~Distances:Participant,
family= binomial)
dat_part1$p <- predict(m, type = "response")
# plot this to check
plt <- ggplot(dat_part1, aes(Distances, Accuracy))
plt <- plt + geom_point()
plt <- plt + geom_smooth(method=glm,
method.args = list(family = "binomial"),
aes(y=p),
fullrange=T, se=F)
plt <- plt + facet_wrap(~Participant)
plt
rm(m, plt)
library(rstan)
setwd("F:/Uni/Github/Transfer_Paper/Stan_stuff")
library(tidyverse)
library(rstan)
library(psych)
#### load data ####
load("../Instructed_Eye_Movements/scratch/models_df")
stan_df <- list(
N = nrow(df),
inst = df$given_instruction,
acc = df$correct,
delta = df$sep_scaled,
half = df$second_half,
S = length(unique(df$participant)),
subj = df$participant
)
m6 <- stan(
file = "models/exp3_m6.stan",
data = stan_df,
chains = 1,
warmup = 1000,
iter = 2000,
refresh = 100
)
m6 <- stan(
file = "models/exp3_m6.stan",
data = stan_df,
chains = 1,
warmup = 1000,
iter = 2000,
refresh = 100
)
summary(m6)
rm(m6)
m6 <- stan(
file = "models/exp3_m6.stan",
data = stan_df,
chains = 4,
cores = 4,
warmup = 1000,
iter = 4000,
refresh = 100
)
save(m6, file = "scratch/model_outputs/m6")
rm(list=ls())
