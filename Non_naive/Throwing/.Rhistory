Hoop_Pos,
Exp_acc)
# tidy
rm(temp, North_acc, South_acc)
#### Calculate: Optimal Acc ####
# use acc_sep again just new names
Opt_acc <- acc_sep
colnames(Opt_acc) <- c("Participant",
"Hoop_Pos",
"Opt_acc")
temp <- merge(df_part2, Opt_acc)
temp$Opt_acc[temp$Opt_acc < 0.5] <- 0.5
Opt_acc <- select(temp,
Participant,
Trial,
Hoop_Pos,
Opt_acc)
# tidy
rm(temp)
#### Calculate: Centre Strategy Acc ####
# use acc_sep again... again
Cent_acc <- acc_sep
colnames(Cent_acc) <- c("Participant",
"Hoop_Pos",
"Cent_acc")
temp <- merge(df_part2, Cent_acc)
Cent_acc <- select(temp,
Participant,
Trial,
Hoop_Pos,
Cent_acc)
# tidy
rm(temp)
#### combine these ####
df <- select(df_part2,
Participant,
Trial,
Hoop_Pos,
Accuracy)
# start combining
df <- merge(df, Cent_acc)
df <- merge(df, Exp_acc)
df <- merge(df, Opt_acc)
#### Accuracy plots ####
# need to reshape this, using gather() from tidyverse
df <- gather(df, Acc_type, Accuracy, Accuracy:Opt_acc, factor_key = T)
# now sort it for plotting
plt_dat <- df %>%
group_by(Participant, Hoop_Pos, Acc_type) %>%
summarise(Accuracy = mean(Accuracy))
# make plt
acc_plt <- ggplot(plt_dat, aes(Hoop_Pos*slab_size, Accuracy))
acc_plt <- acc_plt + theme_bw()
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Opt_acc",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "blue",
alpha = 0.4)
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Cent_acc",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "red",
alpha = 0.4)
acc_plt <- acc_plt + geom_line(data = plt_dat[plt_dat$Acc_type == "Exp_acc",],
size = 1)
acc_plt <- acc_plt + facet_wrap(~Participant)
acc_plt <- acc_plt + theme(strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(size = 10))
acc_plt
acc_plt$labels$x <- "Delta (metres)"
acc_plt
dir()
dir("scratch")
dir("scratch/plots")
ggsave("scratch/plots/Part2_Accuracy.png")
acc_plt <- scale_x_continuous(breaks = c(0,5,10))
acc_plt
acc_plt <- ggplot(plt_dat, aes(Hoop_Pos*slab_size, Accuracy))
acc_plt <- acc_plt + theme_bw()
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Opt_acc",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "blue",
alpha = 0.4)
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Cent_acc",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "red",
alpha = 0.4)
acc_plt <- acc_plt + geom_line(data = plt_dat[plt_dat$Acc_type == "Exp_acc",],
size = 1)
acc_plt <- acc_plt + facet_wrap(~Participant)
acc_plt <- acc_plt + theme(strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(size = 10))
acc_plt <- acc_plt + scale_x_continuous(breaks = c(0,5,10))
acc_plt$labels$x <- "Delta (metres)"
acc_plt
ggsave("scratch/plots/Part2_Accuracy.png")
head(plt_dat)
box_plt <- ggplot(plt_dat, aes(Acc_type, Accuracy))
box_plt <- box_plt + geom_boxplot()
box_plt
bx_plt_dat <- plt_dat[plt_dat$Acc_type == "Exp_acc" |
plt_dat$Acc_type == "Opt_acc",]
box_plt <- ggplot(bx_plt_dat, aes(Acc_type, Accuracy))
box_plt <- box_plt + geom_boxplot()
box_plt
box_plt <- ggplot(bx_plt_dat, aes(Acc_type, Accuracy,
colour = Acc_type))
box_plt <- box_plt + geom_boxplot()
box_plt
box_plt <- box_plt + theme(legend.position = "none")
box_plt
box_plt$labels$x <- "Accuracy type"
box_plt
rm(list = ls())
#### Getting standing positions etc. ####
# This script is to get our standing positions and switching points
#### libraries ####
library(tidyverse)
#### any functions ####
#### Notes/constants ####
slab_size <- 0.46
#### PART 1 ####
#### 1: Load in data ####
df_part1 <- read.csv("data/Our_data/Part_1/Part_1.csv", header = T)
# For some reason the participant column is weird, so rename that
colnames(df_part1)[1] <- c("Participant")
# make participant a factor
df_part1$Participant <- as.factor(df_part1$Participant)
#### 1: GLM ####
# add in trials
df_part1$Trials <- 12
# get Acc
df_part1$Acc <- df_part1$InHoop/df_part1$Trials
# offset
e <- 0.01
df_part1$off_set = log((1-e)/e)
# tidy
rm(e)
# get predicted accuracy
# Make switch_point data
switch_points <- tibble(Participant = character(),
switch_slab = numeric())
acc_sep <- tibble(Participant = character(),
Slab = numeric(),
pred_Acc = numeric())
# run GLM for switch points
for(x in levels(df_part1$Participant)){
# subset data
ss = df_part1[df_part1$Participant==x,]
# get glm
m = glm(data=ss, Acc~Slab,
#offset=ss$off_set,
family = binomial)
# get predictions
p = predict(m, data.frame(Slab=seq(0:47)), type="response")
p = as.numeric(p)
# switch point
switch_slab = which(abs(p-0.5)==min(abs(p-0.5)))
# add to dataset
switch_points = rbind(switch_points, data.frame(Participant = x,
switch_slab = switch_slab))
acc_sep = rbind(acc_sep, data.frame(Participant = x,
Slab = seq(0:47),
pred_Acc = p))
}
# tidy
rm(m, ss, p, switch_slab, x)
# make acc_sep$Slab right
acc_sep$Slab <- acc_sep$Slab - 1
# save acc_sep and switch_slabs
save(acc_sep, file = "scratch/acc_sep")
save(switch_points, file = "scratch/switch_points")
# tidy
rm(switch_points)
#### 1: Make plots ####
# merge across distances
df_part1.5 <- df_part1 %>%
group_by(Participant, Slab) %>%
summarise(Acc = mean(Acc))
# merge in acc_sep part
df_part1.5 <- merge(df_part1.5, acc_sep)
# make plots
plt <- ggplot(df_part1.5, aes(Slab*slab_size,
Acc))
plt <- plt + geom_point()
plt <- plt + theme_bw()
plt <- plt + geom_smooth(method=glm,
method.args = list(family = "binomial"),
aes(y=pred_Acc),
fullrange=T, se=F)
plt <- plt + facet_wrap(~Participant)
plt <- plt + theme(strip.background = element_blank(),
strip.text.x = element_blank())
plt$labels$x <- "Delta (metres)"
plt$labels$y <- "Accuracy"
plt
# save this
# ggsave("scratch/plots/Part_1_plots.png")
# tidy
rm(plt, df_part1, df_part1.5, acc_sep)
#### Part 2 ####
#### 2: load in data ####
df_part2 <- read.csv("data/Our_data/Part_2/Part_2.csv")
# again, participant column went weird
colnames(df_part2)[1] <- c("Participant")
#### 2:Sort Hoop_pos, distances, and AbsPos ####
# Hoop_Pos
for (row in 1:nrow(df_part2)){
df_part2$Hoop_Pos[row] = df_part2[row,as.character(df_part2$Colour[row])]
}
# tidy
rm(row)
# Distances
df_part2$South_dist <- df_part2$StandingPos - (df_part2$Hoop_Pos*-1)
df_part2$North_dist <- df_part2$Hoop_Pos - df_part2$StandingPos
# Abspos
df_part2$Abs_Pos <- abs(df_part2$StandingPos/df_part2$Hoop_Pos)
#### 2: Add in switching points ####
load("scratch/switch_points")
# merge it
df_part2 <- merge(df_part2, switch_points)
# sort out the line
# setup separations
seps <- seq(0, max(df_part2$North_dist), 0.1)
# setup new dataframe
Opt_Pos <- tibble(Participant = character(),
Slab = numeric(),
Opt_Pos = numeric())
for(i in unique(switch_points$Participant)){
d <- switch_points[switch_points$Participant == i,]
for(x in seps){
if(x < as.numeric(d$switch_slab)){
fl <- 0
} else if(x > as.numeric(d$switch_slab)){
fl <- 1
}
Opt_Pos <- rbind(Opt_Pos, data.frame(Participant = i,
Slab = x,
Opt_Pos = fl))
}
}
# tidy
rm(d, fl, i, x, seps)
#### 2: Make plots ####
plt <- ggplot(df_part2, aes(Hoop_Pos*slab_size,
Abs_Pos))
plt <- plt + geom_jitter(size = 1.2)
# plt <- plt + geom_point(alpha = 1/15)
plt <- plt + geom_path(data = Opt_Pos,
colour = "blue",
aes(Slab*slab_size,
Opt_Pos),
size = 0.2)
plt <- plt + scale_x_continuous(limits = c(0,13))
plt <- plt + theme_bw()
plt <- plt + theme(strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(size = 12))
plt <- plt + facet_wrap(~Participant)
plt$labels$x <- "Delta (metres)"
plt$labels$y <- "Normalised Standing Position"
plt
# save this
# ggsave("scratch/plots/Part_2_plot_jitter.png",
#        height = 3.49,
#        width = 4)
#### Calculate: Expected Accuracy ####
# make all values positive
df_part2$North_dist <- abs(df_part2$North_dist)
# load in acc_sep again
load("scratch/acc_sep")
# first make expected accuracy
South_acc <- acc_sep
# sort out some columns
colnames(South_acc) <- c("Participant",
"South_dist",
"South_acc")
North_acc <- South_acc
colnames(North_acc) <- c("Participant",
"North_dist",
"North_acc")
# merge this for expected Accuracy
temp <- merge(df_part2, South_acc)
temp <- merge(temp, North_acc)
# add in Expected Accuracy
temp$Exp_acc <- (temp$North_acc + temp$South_acc)/2
Expected <- select(temp,
Participant,
Trial,
Hoop_Pos,
Exp_acc)
# tidy
rm(temp, North_acc, South_acc)
#### Calculate: Optimal Acc ####
# use acc_sep again just new names
Opt_acc <- acc_sep
colnames(Opt_acc) <- c("Participant",
"Hoop_Pos",
"Opt_acc")
temp <- merge(df_part2, Opt_acc)
temp$Opt_acc[temp$Opt_acc < 0.5] <- 0.5
Optimal <- select(temp,
Participant,
Trial,
Hoop_Pos,
Opt_acc)
# tidy
rm(temp)
#### Calculate: Centre Strategy Acc ####
# use acc_sep again... again
Cent_acc <- acc_sep
colnames(Cent_acc) <- c("Participant",
"Hoop_Pos",
"Cent_acc")
temp <- merge(df_part2, Cent_acc)
Centre <- select(temp,
Participant,
Trial,
Hoop_Pos,
Cent_acc)
# tidy
rm(temp)
#### combine these ####
df <- select(df_part2,
Participant,
Trial,
Hoop_Pos,
Accuracy)
# start combining
df <- merge(df, Centre)
df <- merge(df, Expected)
df <- merge(df, Optimal)
#### Accuracy plots ####
# need to reshape this, using gather() from tidyverse
df <- gather(df, Acc_type, Accuracy, Accuracy:Optimal, factor_key = T)
# now sort it for plotting
plt_dat <- df %>%
group_by(Participant, Hoop_Pos, Acc_type) %>%
summarise(Accuracy = mean(Accuracy))
# make plt
acc_plt <- ggplot(plt_dat, aes(Hoop_Pos*slab_size, Accuracy))
acc_plt <- acc_plt + theme_bw()
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Optimal",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "blue",
alpha = 0.4)
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Centre",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "red",
alpha = 0.4)
acc_plt <- acc_plt + geom_line(data = plt_dat[plt_dat$Acc_type == "Expected",],
size = 1)
acc_plt <- acc_plt + facet_wrap(~Participant)
acc_plt <- acc_plt + theme(strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(size = 10))
acc_plt <- acc_plt + scale_x_continuous(breaks = c(0,5,10))
acc_plt$labels$x <- "Delta (metres)"
acc_plt
# save
# ggsave("scratch/plots/Part2_Accuracy.png")
#### make some boxplots as well ####
# can use same dataset but subset
bx_plt_dat <- plt_dat[plt_dat$Acc_type == "Expected" |
plt_dat$Acc_type == "Optimal",]
box_plt <- ggplot(bx_plt_dat, aes(Acc_type, Accuracy,
colour = Acc_type))
box_plt <- box_plt + geom_boxplot()
box_plt <- box_plt + theme(legend.position = "none")
box_plt$labels$x <- "Accuracy type"
box_plt
head(df)
df <- gather(df, Acc_type, Accuracy, Accuracy:Opt_acc, factor_key = T)
head(df)
df <- select(df_part2,
Participant,
Trial,
Hoop_Pos,
Accuracy)
# start combining
df <- merge(df, Centre)
df <- merge(df, Expected)
df <- merge(df, Optimal)
head(df)
# rename
colnames(df) <- c("Participant",
"Trial",
"Hoop_Pos",
"Actual",
"Centre",
"Expected",
"Optimal")
df <- gather(df, Acc_type, Accuracy, Accuracy:Optimal, factor_key = T)
df <- gather(df, Acc_type, Accuracy, Actual:Optimal, factor_key = T)
head(df)
plt_dat <- df %>%
group_by(Participant, Hoop_Pos, Acc_type) %>%
summarise(Accuracy = mean(Accuracy))
# make plt
acc_plt <- ggplot(plt_dat, aes(Hoop_Pos*slab_size, Accuracy))
acc_plt <- acc_plt + theme_bw()
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Optimal",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "blue",
alpha = 0.4)
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Centre",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "red",
alpha = 0.4)
acc_plt <- acc_plt + geom_line(data = plt_dat[plt_dat$Acc_type == "Expected",],
size = 1)
acc_plt <- acc_plt + facet_wrap(~Participant)
acc_plt <- acc_plt + theme(strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(size = 10))
acc_plt <- acc_plt + scale_x_continuous(breaks = c(0,5,10))
acc_plt$labels$x <- "Delta (metres)"
acc_plt
ggsave("scratch/plots/Part2_Accuracy.png")
bx_plt_dat <- plt_dat[plt_dat$Acc_type == "Expected" |
plt_dat$Acc_type == "Optimal",]
box_plt <- ggplot(bx_plt_dat, aes(Acc_type, Accuracy,
colour = Acc_type))
box_plt <- box_plt + geom_boxplot()
box_plt <- box_plt + theme(legend.position = "none")
box_plt$labels$x <- "Accuracy type"
box_plt
ggsave("scratch/plots/Part2_Box.png")
box_plt <- box_plt + theme_bw()
box_plt
ggsave("scratch/plots/Part2_Box.png")
View(plt_dat)
View(acc_sep)
Opt_sep <- acc_sep
head(Opt_sep)
colnames(Opt_sep) <- c("Participant",
"Hoop_Pos",
"Accuracy")
Opt_sep[Opt_sep$Accuracy < 0.5] <- 0.5
Opt_sep[Opt_sep$Accuracy < 0.5,] <- 0.5
Opt_sep[Opt_sep$Accuracy =< 0.49] <- 0.5
Opt_sep[Opt_sep$Accuracy <= 0.49] <- 0.5
Opt_sep
Opt_sep <- acc_sep
colnames(Opt_sep) <- c("Participant",
"Hoop_Pos",
"Accuracy")
head(Opt_sep)
Opt_sep$Accuracy[Opt_sep$Accuracy < 0.5] <- 0.5
Opt_sep
acc_plt <- ggplot(plt_dat, aes(Hoop_Pos*slab_size, Accuracy))
acc_plt <- acc_plt + theme_bw()
# acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Optimal",],
#                                aes(Hoop_Pos*slab_size,
#                                    Accuracy),
#                                fill = "blue",
#                                alpha = 0.4)
acc_plt <- acc_plt + geom_area(data = Opt_sep,
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "blue",
alpha = 0.4)
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Centre",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "red",
alpha = 0.4)
acc_plt <- acc_plt + geom_line(data = plt_dat[plt_dat$Acc_type == "Expected",],
size = 1)
acc_plt <- acc_plt + facet_wrap(~Participant)
acc_plt <- acc_plt + theme(strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(size = 10))
acc_plt <- acc_plt + scale_x_continuous(breaks = c(0,5,10))
acc_plt$labels$x <- "Delta (metres)"
acc_plt
#### libraries ####
library(tidyverse)
acc_plt <- ggplot(plt_dat, aes(Hoop_Pos*slab_size, Accuracy))
acc_plt <- acc_plt + theme_bw()
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Optimal",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "blue",
alpha = 0.4)
# acc_plt <- acc_plt + geom_area(data = Opt_sep,
#                                aes(Hoop_Pos*slab_size,
#                                    Accuracy),
#                                fill = "blue",
#                                alpha = 0.4)
acc_plt <- acc_plt + geom_area(data = plt_dat[plt_dat$Acc_type == "Centre",],
aes(Hoop_Pos*slab_size,
Accuracy),
fill = "red",
alpha = 0.4)
acc_plt <- acc_plt + geom_line(data = plt_dat[plt_dat$Acc_type == "Expected",],
size = 1)
acc_plt <- acc_plt + facet_wrap(~Participant)
acc_plt <- acc_plt + theme(strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(size = 10))
acc_plt <- acc_plt + scale_x_continuous(breaks = c(0,5,10))
acc_plt$labels$x <- "Delta (metres)"
acc_plt
